services:  
  book-api:
    container_name: book-api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    restart: 'on-failure'
    environment:
      POSTGRES_HOST: db
      POSTGRES_DB: library_management
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "123456"
      GATEWAY_HOST: http://localhost:3001
    depends_on:
      - db
  ccadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: book-api-cadvisor
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
    devices:
      - /dev/kmsg:/dev/kmsg
    depends_on:
      - book-api
  prometheus:
    image: prom/prometheus:latest
    container_name: book-api-prometheus
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
  grafana:
    image: grafana/grafana:latest
    container_name: book-api-grafana
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/data:/var/lib/grafana
    user: "1000"
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
  db:
    image: postgres:15
    container_name: postgres_container
    restart: always
    environment:
      POSTGRES_DB: library_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "123456"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
